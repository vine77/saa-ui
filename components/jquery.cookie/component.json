{
  "name": "jquery.cookie",
  "version": "1.3.1",
  "main": [
    "./jquery.cookie.js"
  ],
  "dependencies": {
    "jquery": ">=1.0"
  },
  "gitHead": "fd724ca9d68f7087427a5efe53d5c839a571c31f",
  "readme": "# jquery.cookie [![Build Status](https://travis-ci.org/carhartl/jquery-cookie.png?branch=master)](https://travis-ci.org/carhartl/jquery-cookie)\n\nA simple, lightweight jQuery plugin for reading, writing and deleting cookies.\n\n## Installation\n\nInclude script *after* the jQuery library (unless you are packaging scripts somehow else):\n\n    <script src=\"/path/to/jquery.cookie.js\"></script>\n\n**Do not include the script directly from GitHub (http://raw.github.com/...).** The file is being served as text/plain and as such being blocked\nin Internet Explorer on Windows 7 for instance (because of the wrong MIME type). Bottom line: GitHub is not a CDN.\n\n## Usage\n\nCreate session cookie:\n\n    $.cookie('the_cookie', 'the_value');\n\nCreate expiring cookie, 7 days from then:\n\n    $.cookie('the_cookie', 'the_value', { expires: 7 });\n\nCreate expiring cookie, valid across entire site:\n\n    $.cookie('the_cookie', 'the_value', { expires: 7, path: '/' });\n\nRead cookie:\n\n    $.cookie('the_cookie'); // => \"the_value\"\n    $.cookie('not_existing'); // => null\n\nRead all available cookies:\n\n    $.cookie(); // => { \"the_cookie\": \"the_value\", \"...remaining\": \"cookies\" }\n\nDelete cookie:\n\n    // Returns true when cookie was found, false when no cookie was found...\n    $.removeCookie('the_cookie');\n\n    // Same path as when the cookie was written...\n    $.removeCookie('the_cookie', { path: '/' });\n\n*Note: when deleting a cookie, you must pass the exact same path, domain and secure options that were used to set the cookie, unless you're relying on the default options that is.*\n\n## Configuration\n\n### raw\n\nBy default the cookie value is encoded/decoded when writing/reading, using `encodeURIComponent`/`decodeURIComponent`. Bypass this by setting raw to true:\n\n    $.cookie.raw = true;\n\n### json\n\nTurn on automatic storage of JSON objects passed as the cookie value. Assumes `JSON.stringify` and `JSON.parse`:\n\n    $.cookie.json = true;\n\n## Cookie Options\n\n### expires\n\nCookie attributes can be set globally by setting properties of the `$.cookie.defaults` object or individually for each call to `$.cookie()` by passing a plain object to the options argument. Per-call options override the default options.\n\n    expires: 365\n\nDefine lifetime of the cookie. Value can be a `Number` which will be interpreted as days from time of creation or a `Date` object. If omitted, the cookie becomes a session cookie.\n\n### path\n\n    path: '/'\n\nDefine the path where the cookie is valid. *By default the path of the cookie is the path of the page where the cookie was created (standard browser behavior).* If you want to make it available for instance across the entire domain use `path: '/'`. Default: path of page where the cookie was created.\n\n**Note regarding Internet Explorer:**\n\n> Due to an obscure bug in the underlying WinINET InternetGetCookie implementation, IEâ€™s document.cookie will not return a cookie if it was set with a path attribute containing a filename.\n\n(From [Internet Explorer Cookie Internals (FAQ)](http://blogs.msdn.com/b/ieinternals/archive/2009/08/20/wininet-ie-cookie-internals-faq.aspx))\n\nThis means one cannot set a path using `path: window.location.pathname` in case such pathname contains a filename like so: `/check.html` (or at least, such cookie cannot be read correctly).\n\n### domain\n\n    domain: 'example.com'\n\nDefine the domain where the cookie is valid. Default: domain of page where the cookie was created.\n\n### secure\n\n    secure: true\n\nIf true, the cookie transmission requires a secure protocol (https). Default: `false`.\n\n## Tests\n\nRequires Node. Startup server:\n\n    $ node test/server.js\n\nOpen in browser:\n\n    $ open http://0.0.0.0:8124/test/index.html\n\nFor quick *non cross-browser* testing use grunt:\n\n    $ grunt\n\n## Development\n\n- Source hosted at [GitHub](https://github.com/carhartl/jquery-cookie)\n- Report issues, questions, feature requests on [GitHub Issues](https://github.com/carhartl/jquery-cookie/issues)\n\nPull requests are very welcome! Make sure your patches are well tested. Please create a topic branch for every separate change you make.\n\n## Authors\n\n[Klaus Hartl](https://github.com/carhartl)\n",
  "readmeFilename": "README.md",
  "_id": "jquery.cookie@1.3.1",
  "description": "A simple, lightweight jQuery plugin for reading, writing and deleting cookies.",
  "repository": {
    "type": "git",
    "url": "git://github.com/carhartl/jquery-cookie.git"
  }
}